%{
DOCUMENTATION
Created: 2024 10 ??
Works? Yes
Author: PA

Things you need to add to the MATLAB path:
wavesurfer code
PA_WSanalysis code

Other things you need to do:
whenever you're using a WSfile object, you need to make sure that the
functions using this object are added to the list of methods in "WSfile"
%}


%% USER INPUT

saveDir = '/Users/priscilla/OHSU Dropbox/Priscilla Ambrosi/Dropbox - Lerner Lab/Ambrosi et al_sCRACM 2024/Data Analysis/2025-04-10 control Z';
databaseFile = '/Users/priscilla/OHSU Dropbox/Priscilla Ambrosi/Dropbox - Lerner Lab/Ambrosi et al_sCRACM 2024/Data Analysis/2025-04-10 control Z/2025-04-10 control data for matlab2.xlsx';
addNamePrefix = 1;  % if 1, substitute h5 file name for database info before any output files generated by this code
addNameSuffix = 1;  % if 1, adds extra name after prefix (created this for control expts)

% Polygon designs order - sub for orderOfROIs
% spaced5x5 = 5x5 spaced out
% spaced9x9 = 9x9 spaced out
% spaced6x6 = 6x6 max sep
% random11x7v1 = 11x7 random1
spaced5x5 = [8 16 14 23 3 10 12 25 21 19 6 18 1 5 11 4 22 15 13 7 2 20 24 17 9]';
spaced9x9 = [50 10 46 73 12 25 69 27 2 4 48 38 40 79 42 67 75 77 44 34 14 32 36 59 71 53 65 6 22 64 16 30 81 57 55 63 8 20 18 28 1 51 9 23 61 78 54 68 76 3 47 49 21 7 24 60 26 66 11 45 39 33 5 62 80 56 70 74 41 43 15 17 52 31 13 58 72 35 37 19 29]';
spaced6x6 = [18 31 33 9 35 5 16 22 27 3 7 25 14 29 20 1 11 15 12 24 36 17 13 23 2 4 8 32 28 21 6 34 10 26 19 30]';
random11x7v1 = [33 65 9 38 46 68 48 62 20 51 47 53 75 35 30 69 71 13 6 34 16 2 44 28 27 73 31 61 39 21 22 8 58 19 63 42 52 66 1 72 26 5 25 18 45 64 29 3 60 56 70 76 41 14 10 32 23 54 15 50 36 67 24 77 37 40 74 57 43 59 17 4 55 12 11 7 49]';

% % Quality check of Polygon designs 
% reshape(spaced5x5,5,5).';
% reshape(spaced9x9,9,9).';
% reshape(spaced6x6,6,6).';
% reshape(random11x7v1,11,7).';

%% USER INPUT inside function "psc_vs_light_single_batch"

% default
bGuess = 1;         

% row = 35 ---> DMS_m040_s1c1_allLit_coolLED - s0001
% bGuess = -1000;


%% MAIN CODE

% read database file
database = readtable(databaseFile);

% each row is a cell
rows = height(database);

% for troubleshooting - plot a single row
% row = 35;


%% MAIN LOOP

% iterate through rows (aka cells) to gather info from database and analyze
% data from each cell
for row = 1:rows
    
    % collect info from the database about this cell
    circuitLabel = cell2mat(database.circuit(row));
    cellLabel = cell2mat(database.cell(row));
    cellDir = cell2mat(database.dir(row));
    leftCrop = database.leftCrop(row);
    rightCrop = database.rightCrop(row);
    topCrop = database.topCrop(row);
    bottomCrop = database.bottomCrop(row);
    % adjust mouse number according to length to get consistent m000
    % nomenclature
    if length(num2str(database.m(row))) == 3
        mouseNumber = strcat('m',num2str(database.m(row)));
    elseif length(num2str(database.m(row))) == 2
        mouseNumber = strcat('m0',num2str(database.m(row)));
    elseif isscalar(num2str(database.m(row)))
        mouseNumber = strcat('m00',num2str(database.m(row)));  
    end

    % create name prefix we will use to label figures and spreadsheets
    cellNamePrefix = strcat(circuitLabel, '_', mouseNumber, '_', cellLabel, '_');

    % add name suffix if user requested it
    if addNameSuffix == 1
        cellSuffix = cell2mat(database.suffix(row));
        cellNamePrefix = strcat(circuitLabel, '_', mouseNumber, '_', cellLabel, '_', cellSuffix, '_');
    end

    % create WSfile obj
    cellObj = WSfileFromDir(cellDir);


    % %% collect data from the coolLED sweeps - full field of view
    % % illumination
    % sweepToAnalyze = cell2mat(database.coolLED(row));
    % sweepTypePrefix = 'allLit_coolLED_';
    % lightStimCh = 2;    % ALERT hard-coded: #2 is the CoolLED blue light digital output - it contains timing data about when the LED was turned ON/OFF
    % 
    % if addNamePrefix == 1
    %     namePrefix = strcat(cellNamePrefix,sweepTypePrefix);
    % else
    %     namePrefix = [];
    % end
    % 
    % psc_vs_light_single_batch(cellObj.(sweepToAnalyze),...
    %     lightStimCh, saveDir,...
    %     addNamePrefix, namePrefix);


    % %% collect data from the grid all lit sweeps - full grid illumination
    % sweepToAnalyze = cell2mat(database.grid_all_lit(row));
    % sweepTypePrefix = 'allLit_polygon_';
    % lightStimCh = 4;    % ALERT hard-coded: #4 is the polygon digital output - it contains timing data about when the polygon mirrors were engaged/disengaged
    % 
    % if addNamePrefix == 1
    %     namePrefix = strcat(cellNamePrefix,sweepTypePrefix);
    % else
    %     namePrefix = [];
    % end
    % 
    % psc_vs_light_single_batch(cellObj.(sweepToAnalyze),...
    %     lightStimCh, saveDir,...
    %     addNamePrefix, namePrefix);


    % %% collect data from the 5x5 grid sweeps
    % sweepToAnalyze = cell2mat(database.grid_5x5_40x(row));
    % sweepTypePrefix = 'sCRACM_40x_5x5_';
    % 
    % if addNamePrefix == 1
    %     namePrefix = strcat(cellNamePrefix,sweepTypePrefix);
    % else
    %     namePrefix = [];
    % end
    % 
    % gridColumns = 5;
    % gridRows = 5;
    % orderOfROIs = spaced5x5;
    % discardedSweeps = [];
    % 
    % psc_vs_light_polygon_batch(cellObj.(sweepToAnalyze),...
    %     leftCrop, rightCrop, topCrop, bottomCrop,...
    %     gridColumns, gridRows, orderOfROIs,...
    %     discardedSweeps,...
    %     saveDir,...
    %     addNamePrefix, namePrefix);


    % %% collect data from the 11x7 grid sweeps
    % sweepToAnalyze = cell2mat(database.grid_11x7_40x(row));
    % if sweepToAnalyze ~= 'n'
    %     sweepTypePrefix = 'sCRACM_40x_11x5_';
    % 
    %     if addNamePrefix == 1
    %         namePrefix = strcat(cellNamePrefix,sweepTypePrefix);
    %     else
    %         namePrefix = [];
    %     end
    % 
    %     gridColumns = 11;
    %     gridRows = 7;
    %     orderOfROIs = random11x7v1;
    % 
    %     %%%% FIX THIS SHIT - you need to remove a lot more sweeps!!! 77 x
    %     %%%% the numnber in the dataset!!!
    %     % label discardedSweeps if needed
    %     discardedSweeps=[];
    %     if database.n_sweeps_grid_11x7_40x(row) < 10
    %         % remove "s" from "sweepToAnalyze" and turn it into a number
    %         firstSweepToAnalyze = str2num(sweepToAnalyze(2:end));
    %         numberOfROIs = gridColumns * gridRows;
    %         % multiplying by 11 instead of 10 to overshoot
    %         lastSweepAvailable = firstSweepToAnalyze + numberOfROIs * 11;
    %         discardedSweeps = firstSweepToAnalyze:lastSweepAvailable;
    %         numberOfSweepsToInclude = numberOfROIs * database.n_sweeps_grid_11x7_40x(row);
    %         discardedSweeps = discardedSweeps(numberOfSweepsToInclude+1:end);
    %     else
    %         discardedSweeps=[];
    %     end
    % 
    %     psc_vs_light_polygon_batch(cellObj.(sweepToAnalyze),...
    %         leftCrop, rightCrop, topCrop, bottomCrop,...
    %         gridColumns, gridRows, orderOfROIs,...
    %         discardedSweeps,...
    %         saveDir,...
    %         addNamePrefix, namePrefix);
    % end


%% collect data from the 5x5 grid sweeps (special for Z resolution)
    sweepToAnalyze = cell2mat(database.grid_5x5_40x(row));
    sweepTypePrefix = 'sCRACM_40x_5x5_';

    if addNamePrefix == 1
        namePrefix = strcat(cellNamePrefix,sweepTypePrefix);
    else
        namePrefix = [];
    end

    gridColumns = 5;
    gridRows = 5;
    orderOfROIs = spaced5x5;

    % label discardedSweeps if needed
    discardedSweeps=[];
    if database.n_sweeps_grid_11x7_40x(row) < 10
        % remove "s" from "sweepToAnalyze" and turn it into a number
        firstSweepToAnalyze = str2num(sweepToAnalyze(2:end));
        numberOfROIs = gridColumns * gridRows;
        % multiplying by 11 instead of 10 to overshoot
        lastSweepAvailable = firstSweepToAnalyze + numberOfROIs * 11;
        discardedSweeps = firstSweepToAnalyze:lastSweepAvailable;
        numberOfSweepsToInclude = numberOfROIs * database.n_sweeps_grid_11x7_40x(row);
        discardedSweeps = discardedSweeps(numberOfSweepsToInclude+1:end);
    else
        discardedSweeps=[];
    end

    psc_vs_light_polygon_batch(cellObj.(sweepToAnalyze),...
        leftCrop, rightCrop, topCrop, bottomCrop,...
        gridColumns, gridRows, orderOfROIs,...
        discardedSweeps,...
        saveDir,...
        addNamePrefix, namePrefix);


    %% save all figs
    saveAllFigs(saveDir);
    close all;

end


